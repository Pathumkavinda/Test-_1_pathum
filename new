<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD Operations - Students</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
        .form-container {
            margin-bottom: 20px;
        }
        input[type="text"] {
            padding: 5px;
            margin-right: 10px;
        }
        button {
            padding: 6px 12px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Students CRUD Operations</h1>

    <div class="form-container">
        <input type="text" id="studentId" placeholder="Enter student ID">
        <input type="text" id="studentName" placeholder="Enter student name">
        <button onclick="createStudent()">Create Student</button>
    </div>

    <h3>Student List</h3>
    <table id="studentsTable">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Student rows will go here -->
        </tbody>
    </table>

    <script>
        const apiUrl = 'http://localhost:8080/rest_service/api/students';

        // Fetch and display all students
        async function getStudents() {
            const response = await fetch(apiUrl);
            const students = await response.json();
            const tableBody = document.querySelector('#studentsTable tbody');
            tableBody.innerHTML = ''; // Clear the table before inserting new data

            students.forEach(student => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${student.id}</td>
                    <td>${student.name}</td>
                    <td>
                        <button onclick="updateStudent(${student.id}, '${student.name}')">Edit</button>
                        <button onclick="deleteStudent(${student.id})">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // Create a new student
        async function createStudent() {
            const id = document.getElementById('studentId').value;
            const name = document.getElementById('studentName').value;
            
            if (!id || !name) {
                alert('Please enter both student ID and name');
                return;
            }

            const newStudent = { id, name };
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newStudent)
            });

            if (response.ok) {
                getStudents();
                document.getElementById('studentId').value = ''; // Clear input
                document.getElementById('studentName').value = ''; // Clear input
            }
        }

        // Update an existing student
        async function updateStudent(id, currentName) {
            const newName = prompt('Update student name:', currentName);
            if (newName && newName !== currentName) {
                const updatedStudent = { id, name: newName };
                const response = await fetch(`${apiUrl}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(updatedStudent)
                });

                if (response.ok) {
                    getStudents();
                }
            }
        }

        // Delete a student
        async function deleteStudent(id) {
            const confirmed = confirm('Are you sure you want to delete this student?');
            if (confirmed) {
                const response = await fetch(`${apiUrl}/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    getStudents();
                }
            }
        }

        // Initial call to load students when the page loads
        getStudents();
    </script>
</body>
</html>
